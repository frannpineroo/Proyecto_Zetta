@page "/api/Clientes"
@inject IHttpServicio http


<h2>Clientes</h2>
<br />
<a class="btn btn-primary" href="/api/Clientes/crear">Añadir nuevo Cliente</a>
<br />
<table>
	<tr>
		<th>Código</th>
		<th>Nombre</th>
		<th>Apellido</th>
		<th>Dirección</th>
		<th>Localidad</th>
		<th>Teléfono</th>
		<th>Mail</th>
		<th>Descripción</th>
	</tr>
	@if (Mensaje == "")
	{

		@if (listaCliente == null)
		{
			<p>Buscando...</p>
		}
		else if(listaCliente.Count == 0)
		{
			<p>No existe ningún cliente</p>
		}
		else
		{
			@foreach (var item in listaCliente)
			{
				<tr>
					<td>@item.Codigo</td>
					<td>@item.Nombre</td>
					<td>@item.Apellido</td>
					<td>@item.Direccion</td>
					<td>@item.Localidad</td>
					<td>@item.Telefono</td>
					<td>@item.Mail</td>
					<td>@item.Descripcion</td>
				</tr>
			}
		}
	}
	else
	{
		<p> Error: @Mensaje</p>
	}
</table>
@code {
	List<Cliente> listaCliente;
	string Mensaje = "";

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		await Leer();
	}

	private async Task Leer()
	{
		// var = HttpRespuesta<List<Cliente>>
		var resp = await http.Get<List<Cliente>>("api/Clientes");
		if (!resp.Error)
		{
			listaCliente = resp.Respuesta;
		}
		else
		{
			Mensaje = await resp.ObtenerError();
		}
	}

}
