@page "/api/Clientes/crear"
@inject IHttpServicio http
@inject NavigationManager navigationManager

<h2>Crear Nuevo Cliente</h2>

<EditForm Model="cliente" OnValidSubmit="Grabar">
	<DataAnnotationsValidator />
	<div class="form-group">
		<label>Código</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Codigo" />
			<ValidationMessage For="@(() => cliente.Codigo)" />
		</div>
	</div>
	<div class="form-group">
		<label>Nombre</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Nombre" />
			<ValidationMessage For="@(() => cliente.Nombre)" />
		</div>
	</div>
	<div class="form-group">
		<label>Apellido</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Apellido" />
			<ValidationMessage For="@(() => cliente.Apellido)" />
		</div>
	</div>
	<div class="form-group">
		<label>Dirección</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Direccion" />
			<ValidationMessage For="@(() => cliente.Direccion)" />
		</div>
	</div>
	<div class="form-group">
		<label>Localidad</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Localidad" />
			<ValidationMessage For="@(() => cliente.Localidad)" />
		</div>
	</div>
	<div class="form-group">
		<label>Teléfono</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Telefono" />
			<ValidationMessage For="@(() => cliente.Telefono)" />
		</div>
	</div>
	<div class="form-group">
		<label>Mail</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Mail" />
			<ValidationMessage For="@(() => cliente.Mail)" />
		</div>
	</div>
	<div class="form-group">
		<label>Descripción</label>
		<div>
			<InputText class="form-control" @bind-Value="@cliente.Descripcion" />
			<ValidationMessage For="@(() => cliente.Descripcion)" />
		</div>
	</div>
	<br />
	<button class="btn btn-primary" type="submit">Aceptar</button>
	<button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>



@code {
	private Cliente cliente = new Cliente();

	private async Task Grabar()
	{
		var httpRespuesta = await http.Post<Cliente>("api/Clientes", cliente);
		if (httpRespuesta.Error)
		{
			var body = httpRespuesta.HttpResponseMessage;
		}
		navigationManager.NavigateTo("/api/Clientes");
	}

	private void Cancelar()
	{
		navigationManager.NavigateTo("/api/Clientes");
	}
}
